{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","components/Notiification/Notification.js","components/Form/Form.js","redux/phonebook/phonebook-selectors.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","changeFilter","createAction","filterReducer","createReducer","_","action","payload","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","saveContact","mutation","newContact","url","method","body","invalidatesTags","deleteContacts","id","useFetchContactsQuery","useSaveContactMutation","useDeleteContactsMutation","Notification","message","useState","shouldRender","setShouldRender","useEffect","setTimeout","style","color","Form","name","setName","phone","setPhone","contacts","data","loadingContacts","isLoading","saveError","isError","saveSuccess","isSuccess","reset","checkContactIdentity","find","contact","toLowerCase","alertIdentity","alert","nameID","shortid","generate","numberID","className","s","form","onSubmit","event","preventDefault","undefined","label","htmlFor","input","type","value","pattern","title","required","onChange","e","target","formBtn","loaderContainer","arialLabel","radius","height","width","getFilterWord","state","filter","Filter","filterValue","useSelector","dispatch","useDispatch","filterLabel","filterInput","onBlur","ContactItem","phoneNumber","deleteContact","contactListItem","contactContent","deleteContactBtn","onClick","ContactList","filterWord","error","filteredContacts","includes","contactList","map","App","store","configureStore","reducer","middleware","getDefaultMiddleware","setupListeners","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2737a35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactItem_contactListItem__Y70lK\",\"contactContent\":\"ContactItem_contactContent__Tfrbi\",\"deleteContactBtn\":\"ContactItem_deleteContactBtn__22nVo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__mKOy6\",\"filterInput\":\"Filter_filterInput__2s7FS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__19DfD\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const changeFilter = createAction('phonebook/changeFilter')\r\n\r\n ","import { createReducer } from '@reduxjs/toolkit';\r\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nimport { changeFilter } from './phonebook-actions';\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contactsApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://61daf7c14593510017aff746.mockapi.io/api',\r\n  }),\r\n  tagTypes: ['Contacts'],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => '/contacts',\r\n      providesTags: ['Contacts'],\r\n    }),\r\n\r\n    saveContact: builder.mutation({\r\n      query: newContact => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body: newContact,        \r\n      }),\r\n      invalidatesTags: ['Contacts'],\r\n    }),\r\n\r\n    deleteContacts: builder.mutation({\r\n      query: id => ({\r\n        url: `/contacts/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contacts'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useSaveContactMutation,\r\n  useDeleteContactsMutation,\r\n} = contactsApi;\r\n","import { useEffect, useState } from \"react\"\r\n\r\n\r\nexport default function Notification({message}) {\r\n  const [shouldRender, setShouldRender] = useState(true);\r\n\r\n  useEffect(() => {\r\n   return setTimeout(() => {\r\n      setShouldRender(false);\r\n    }, 3000); \r\n  })\r\n\r\n  return (\r\n    <>\r\n    {shouldRender && <p style={{color:'blue'}}>{message}</p>}\r\n    </>\r\n  )\r\n}","import { useState } from 'react';\nimport shortid from 'shortid';\nimport { Oval } from 'react-loader-spinner';\n\nimport { useFetchContactsQuery, useSaveContactMutation } from '../../redux/phonebook/phonebook-reducer';\nimport s from './Form.module.css';\nimport Notification from '../Notiification/Notification';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const { data:contacts, isLoading: loadingContacts } = useFetchContactsQuery();\n  const [saveContact, { isLoading, isError: saveError, isSuccess: saveSuccess }] = useSaveContactMutation();\n    \n  const onSubmitAddContact = event => {\n    event.preventDefault();\n    const newContact = {\n      name,\n      phone,\n    };\n\n    if (checkContactIdentity() === undefined) {\n      saveContact(newContact);\n      reset();\n    } else {\n      alertIdentity(name);\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const checkContactIdentity = () => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const alertIdentity = name => {\n    alert(`${name} is already in your contacts!`);\n    reset();\n  };\n\n  const nameID = shortid.generate();\n  const numberID = shortid.generate();\n\n  return (\n    <>\n    <form className={s.form} onSubmit={onSubmitAddContact}>\n      <label className={s.label} htmlFor={nameID}>\n        Name\n      </label>\n      <input\n        id={nameID}\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={e => setName(e.target.value)}\n      />\n      <label className={s.label} htmlFor={numberID}>\n        Number\n      </label>\n      <input\n        id={numberID}\n        className={s.input}\n        type=\"tel\"\n        name=\"number\"\n        value={phone}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={e => setPhone(e.target.value)}\n      />\n      <button className={s.formBtn} type=\"submit\">\n        Add contact\n      </button>\n      </form>\n      <div className={s.loaderContainer}>\n        {(isLoading || loadingContacts) &&\n          <Oval arialLabel=\"loading-indicator\" radius='17.5' height='60' width='60' color='rgb(197 205 208 )' />}\n        {saveError && alert('something went wrong!')}\n        {saveSuccess && <Notification message={'New contact is saved to phonebook!'} />}\n      </div>\n        </>\n  );\n}\n","const getContacts = state => state.contacts.items;\r\n\r\nconst getFilterWord = state => state.filter;\r\n\r\nconst getFilteredContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filterWord = getFilterWord(state);\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filterWord.toLowerCase()),\r\n  );\r\n}\r\n\r\nexport {\r\n  getContacts,\r\n  getFilterWord,\r\n  getFilteredContacts\r\n}","import { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilterWord } from '../../redux/phonebook/phonebook-selectors';\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nexport default function Filter() {\n  const filterValue = useSelector(getFilterWord);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.filterLabel}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={filterValue}\n        className={s.filterInput}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        onBlur={e => dispatch(changeFilter(''))}\n      />\n    </label>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Oval } from 'react-loader-spinner';\n\nimport { useDeleteContactsMutation } from '../../redux/phonebook/phonebook-reducer';\nimport s from './ContactItem.module.css';\n\nexport default function ContactItem({ id, name, phoneNumber }) {\n  const [deleteContact, { isLoading }] = useDeleteContactsMutation();\n  return (\n    <>\n      <li className={s.contactListItem}>\n        <p className={s.contactContent}>\n          {name}: <span>{phoneNumber}</span>\n        </p>\n        <button\n          className={s.deleteContactBtn}\n          type=\"button\"\n          onClick={() => deleteContact(id)}\n        >\n          Delete\n      {isLoading && (\n        <Oval\n          arialLabel=\"loading-indicator\"\n          height=\"14\"\n          width=\"14\"\n          color=\"white\"\n        />\n      )}\n        </button>\n      </li>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\n\nimport { useFetchContactsQuery } from '../../redux/phonebook/phonebook-reducer';\nimport { getFilterWord } from '../../redux/phonebook/phonebook-selectors';\nimport ContactItem from '../ContactItem';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const filterWord = useSelector(getFilterWord);\n  const { data, error } = useFetchContactsQuery();\n\n  const getfilteredContacts = contacts =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterWord.toLowerCase()),\n    );\n\n  const filteredContacts = data ? getfilteredContacts(data) : null;\n\n  return (\n    <>\n      {error && alert('Ooops...')}\n      <ul className={s.contactList}>\n        {data &&\n          filteredContacts.map(({ id, name, phone }) => (\n            <ContactItem key={id} id={id} name={name} phoneNumber={phone} />\n          ))}\n      </ul>\n    </>\n  );\n}\n","import Form from './components/Form';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nexport default function App() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Form />\n\n      <h2>Contacts</h2>\n      <Filter />\n\n      <ContactList />\n    </>\n  );\n}\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { setupListeners } from '@reduxjs/toolkit/query';\r\n\r\nimport { contactsApi } from './phonebook/phonebook-reducer';\r\nimport { filterReducer } from './phonebook/phonebook-reducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    filter: filterReducer,\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n  },\r\n  middleware: getDefaultMiddleware => [...getDefaultMiddleware(), contactsApi.middleware]\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store} from './redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3SNGZ\",\"label\":\"Form_label__2siDy\",\"input\":\"Form_input__32A_O\",\"formBtn\":\"Form_formBtn__3vmpo\",\"loaderContainer\":\"Form_loaderContainer__IzTWF\"};"],"sourceRoot":""}